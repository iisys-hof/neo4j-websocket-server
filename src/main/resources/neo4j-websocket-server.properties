# Copyright (c) 2012-2013 Institute of Information Systems, Hof University
#
# This file is part of "Neo4j WebSocket Server".
#
# "Neo4j WebSocket Server" is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

## Neo4j
#which mode to operate in
#possible modes: embedded, enterprise, rest, impermanent
neo4j.mode=embedded

#neo4j data directory, needed for embedded databases
neo4j.path=/tmp/neo4j/

#configuration path, needed for enterprise mode
#neo4j.configpath=neo4j.properties

#host and port for server mode
#neo4j.server.host=localhost
#neo4j.server.port=7474

#user and password for server authentication
#neo4j.server.user=
#neo4j.server.password=

#other parameters to be passed to an embedded database
#everything after neo4j.properties. will be used as the key
#neo4j.properties.foobar=

##Websockets
#standalone server configuration
websocket.host=127.0.0.1
websocket.port=8080
websocket.path=/neo4j-websocket-server

#format to send and receive in (json/bson)
websocket.default.format=bson
#compression (none/best/fastest)
websocket.default.compression=none

#threading configuration
websocket.default.threading=true
websocket.default.threads=4

#list of Cypher stored procedure files, separated by semicolons
#websocket.stored.cypher=cypher_procedures.ini

#list of native stored procedure files, separated by semicolons
#websocket.stored.native=native_procedures.ini


##Authentication
#which type of authentication to use
#default options are 'none' and 'default' (default: 'none')
#default authentication requires a user account file to be specified
#authentication.type=default

#user account file to read hashed passwords from
#authentication.user.file=websock_users.ini

#hashing method to use with default authentication (default: 'SHA-512')
#changing this will require all password hashes to be recreated
#authentication.hash.method=SHA-512


##Shindig
#TODO: move to own configuration
#initial XML data to load if there is no data
#backend.initdata=

#activity object handling
#whether to only store activity objects once per ID and type (default: false)
#activityobjects.deduplicate=false

#whether to update deduplicated objects when received again (default: false)
#activityobjects.update=false

#whether the servlet providing file upload functionality should be enabled
#uploads_enabled=true

#maximum size of uploaded files in bytes (default: 1048576; 1MiB)
#max_upload_size=1048576

#where to put the uploaded files (default options: database, filesystem; default: database)
#upload_target=database

#where to store files in the file system, if the 'filesystem' target is selected
#upload_path=/tmp/shindig/

#whether the servlet providing file download functionality should be enabled
#downloads_enabled=true

#URL prefix for file downloads
#download_path=http://127.0.0.1:8080/uploads/